name: git-execution-rules
description: Rules for executing git commands in Cursor Agent

rules:
  - name: commit-message
    description: Rules for git commit messages
    constraints:
      - language: english
      - max_words: 20
      - style: imperative
      - format: single_sentence
      - reference_issue: true
    prefixes:
      - feat: New feature
      - fix: Bug fix
      - docs: Documentation changes
      - refactor: Code refactoring
      - chore: Maintenance tasks
      - test: Adding or modifying tests
    format: "{prefix}: {message} (#{issue_number})"

  - name: branch-naming
    description: Rules for git branch names
    format: "{issue_number}-{description}"
    constraints:
      - lowercase
      - hyphen_separated
      - max_length: 50
      - require_issue_number: true

  - name: commit-workflow
    description: Standard workflow for commits
    steps:
      - check_status
      - list_changes:
          - new_files: "List all new files"
          - modified_files: "List all modified files"
          - deleted_files: "List all deleted files"
      - file_operations:
          - add_new_files: "Add all new files to staging"
          - add_modified_files: "Add all modified files to staging"
          - remove_deleted_files: "Remove all deleted files from git tracking"
      - commit
      - push
    notes:
      - "Before any git add/rm operation, always run 'git status' and ensure all changes (new, modified, deleted) are staged according to the status output. This prevents missing files from being left unstaged."
      - "Each commit should reference an issue number in the commit message."
    validation:
      - no_uncommitted_changes
      - meaningful_commit_message
      - branch_up_to_date
      - all_files_properly_staged:
          - new_files_added
          - modified_files_added
          - deleted_files_removed
      - issue_referenced

  - name: merge-strategy
    description: Rules for merging branches
    strategies:
      - squash: For feature branches
      - merge: For release branches
      - rebase: For keeping history clean
    constraints:
      - no_conflicts
      - tests_passing
      - documentation_updated

  - name: commit-checklist
    description: Personal checklist for commits
    items:
      - "Code follows style guidelines"
      - "All tests pass"
      - "Documentation is up to date"
      - "Issue is properly referenced"
      - "Changes are focused and minimal"
      - "Code is self-documenting"
      - "No debug code or comments left"

  - name: tag-versioning
    description: Rules for version tagging
    format: "v{major}.{minor}.{patch}"
    constraints:
      - semantic_versioning
      - annotated_tags
      - push_tags
      - require_release_notes 