from langchain_core.prompts import (
    AIMessagePromptTemplate,
    ChatPromptTemplate,
    MessagesPlaceholder,
    SystemMessagePromptTemplate,
)
from langchain_core.messages import HumanMessage, AIMessage

from .. import Config, Model, State, logger


def overview_generator(state: State) -> dict:
    """
    ## Overview Generator Agent

    Write a summary of the meeting based on the main content extracted by main_content_extractor.

    Args:
        state (State): The current state containing meeting information and main_content

    Returns:
        dict: A dictionary containing the generated summary message
    """
    logger.info("🟢 概要を生成...")

    # main_content_extractorの結果を取得
    if "main_content" not in state:
        logger.error("❌ メインコンテンツが見つかりません")
        return {"overview": "エラー: メインコンテンツが抽出されていません。", "messages": []}

    main_content = state["main_content"]
    logger.info(f"メインコンテンツ({len(main_content)}文字)から要約文を生成します")

    llm = Model().llm()
    system_prompt = SystemMessagePromptTemplate.from_template("""
あなたは政府会議資料の要約を作成する専門エージェントです。
内部で段階的に処理を行い、最終的に要約文のみを出力してください。
処理手順や中間結果は出力せず、完成した要約文のみを返してください。
    """)
    assistant_prompt = AIMessagePromptTemplate.from_template("""
以下の手順でメインコンテンツを分析し、要約を作成してください。各手順は内部処理として行い、最終的に要約文のみを出力してください。

## 内部処理手順（出力しない）
### 手順0: 議事録判定（内部処理）
- **議事録の明確な特徴を確認**：
    - 実際の発言記録パターン：
        - 「○○委員から」「○○委員より」「○○座長から」
        - 「質問に対し」「意見として」「発言があった」
        - 「について述べた」「について説明した」
        - 「これに対して」「この点について」
    - 議論の詳細な流れ：
        - 複数の発言者による具体的な対話内容
        - 質疑応答の詳細な記録
        - 意見交換の具体的な内容

- **議事録判定の厳格な条件（すべて満たす必要あり）**：
    1. **実際の発言内容の具体的な記録**：参加者の発言が逐語的または要約的に記録されている
    2. **複数の発言者による議論の詳細**：誰が何を発言したかが明確に記録されている
    3. **質疑応答の具体的な内容**：質問とそれに対する回答が詳細に記録されている
    4. **議論の流れと結論**：議論の経緯と決定事項や方向性が記録されている

- **議事録ではないもの（明確に除外）**：
    - **資料リストページ**：PDFファイルや資料のリンクのみが記載されているページ
    - **議事次第・議題リスト**：開催予定や議題の箇条書きのみ
    - **参加者名簿・委員名簿**：出席者の名前や所属のリストのみ
    - **会議案内・開催通知**：日時・場所・議題の告知のみ
    - **資料の配布案内**：ダウンロードリンクや閲覧方法の案内のみ
    - **単なるファイルリスト**：ファイル名とサイズの列挙のみ

### 手順1: 基本情報の特定と会議/文書判定
- ページの名称（会議、報告書、とりまとめ、案内、お知らせ、募集など）
- 会議の場合は回数（第×回）を特定
- 主催・事務局の府省庁名や審議会名
- 上位の委員会、研究会、ワーキンググループ名（該当する場合）

**会議か文書かの判定基準：**
- 会議として扱う場合：
    - ページ名に「会議」「検討会」「委員会」「審議会」「協議会」「ワーキンググループ」「研究会」「部会」「分科会」が含まれる
    - **ただし、単なる資料リストページの場合は会議ページとして扱うが議事録ではない**
    - 実際の議論内容や検討結果が記載されている場合
- 文書として扱う場合：
    - 「お知らせ」「案内」「募集」「通知」「報告書」「ガイドライン」などの単発文書
    - 「ブログ」「記事」「コラム」「寄稿」「インタビュー」「解説」
    - 特定の制度や政策の説明文書
    - 調査結果やデータの公表文書
    - 個人の見解や意見が中心の内容
    - 時事的なテーマに対する解説や論評
    - 専門家による解説文書

### 手順2: 内容の要約（判定結果に応じた表現）
- 議事録と判定された場合：
    - 実際の発言内容や議論の詳細を重視して包括的な要約を作成
    - 委員の具体的な発言や提案を反映
    - 質疑応答の内容や議論の流れを含める
    - 決定事項や今後の方針を明確化
    - **長さ制限なし**（議論の詳細を優先、最大1000字程度）
    - 「「会議名」では〜が議論された」の形式で表現（会議名の前に「会議では」は付けない）
- 会議として判定された場合：
    - **資料リストページの場合**：会議の開催と配布資料の内容から会議の目的や議題を推測
    - **実際の議論内容がある場合**：メインコンテンツから主要な議論内容・検討事項を抽出
    - 重要なポイントや結論を整理
    - **配布資料の情報は含めない**：どんな資料が配布されたかの情報は要約に含めない
    - 「「会議名」では〜が議論された」「「検討会名」では〜が検討された」の形式で表現（会議名の前に「会議では」は付けない）
- 文書として判定された場合：
    - メインコンテンツから主要な内容を抽出
    - 重要なポイントや結論を整理
    - **長さ制限なし**（内容の網羅性を優先、最大1000字程度）
    - 政策文書の場合：制度や政策の詳細を重視
    - ブログ・記事の場合：著者の論点や見解を重視
    - 文書名が明確な場合は「「文書名」によれば + 内容」の形式で表現
    - 文書名が不明確な場合は実際の内容のみを簡潔に要約して表現
    - 「では」の重複に注意：文書名に「では」が含まれていても追加で「では」を付けない
    - タイトルや会議名、文書名は必ず「」（鍵括弧）で囲むこと
- 共通の除外項目：
    - 会議の委員提出資料や参考資料の名称、委員による資料提出情報は除外
    - メインコンテンツに含まれていない内容は含めない

**除外すべき情報（重要）：**
- ファイルサイズ情報（「1.2MB」「14.2MB」など）
- ソフトウェア案内（「Adobe Acrobat Reader」「PDFリーダー」など）
- ファイル形式の説明（「PDF形式」「Excel形式」など）
- ダウンロード方法や閲覧方法の案内
- ファイルを読むための技術的な注意事項や推奨環境
- ファイルの保存場所や配布に関する情報
- 会議の開催日時・日付（「令和○年○月○日」「○月○日開催」など）
- 会議の開催場所（「○○省会議室」「オンライン開催」「ハイブリッド開催」など）
- 会議の開催形式（「対面」「Web会議」「Teams会議」など）
- 委員による資料提出情報（「○○委員資料提出」「○○委員提供資料」など）
- 事務局による説明情報（「事務局説明」「事務局より説明」など）
- **配布資料の一覧・情報（「資料1」「資料2」「参考資料」「配布資料」など）**
- **どんな資料が配布されたかの情報**
- **会議の出席者・参加者情報（「出席者」「参加者一覧」「委員名簿」など）**
- **具体的な日時表現（「午前9時30分開始」「14:00-16:00」など）**
- **具体的な場所表現（「東京都千代田区」「○○ビル3階」など）**
- その他、文書の内容とは無関係な技術的メタデータ

### 手順3: 文章の調整
- 内容の重要性に応じて適切な長さで要約する（最大1000字程度）
- 議事録や詳細な文書の場合は、内容の完全性を優先して長めの要約も許可する
- 一般的な会議やお知らせの場合は簡潔な要約を作成する
- 「だ・である調」で統一
- 主語述語の関係、助詞の使い方を確認
- 重複表現や不自然な省略を修正
- **重要**: 簡潔性よりも内容の正確性と完全性を優先する

## 出力要件（重要）
- 上記の内部処理を経て、要約文のみを出力
- **議事録と判定した場合のみ**：要約文の最後に「[DETAILED_MINUTES_DETECTED]」を付加
- **文書ページと判定した場合**：要約文の最後に「[DOCUMENT_PAGE_DETECTED]」を付加
- **会議の資料リストページの場合**：どちらのフラグも付加しない（通常の会議として扱う）
- 処理手順、ステップ番号、見出し（###、##など）は一切出力しない
- 箇条書き（・、-、1.など）は使用しない
- 「概要」「要約」「ステップ」「チェック」などのラベルは出力しない
- マークダウン記法（```、**など）は使用しない
- コードブロックは使用しない

## 期待する出力例

### 会議の場合（良い例）：
「教育分野の認証基盤の在り方に関する検討会（第3回）」では、組織間・外部連携における認証基盤の取りまとめ案について、ユースケース整理や実装パターン、個人情報保護の留意事項などを中心に議論し、スケジュールの明確化や複数自治体での実証などの改善点を確認した。

### 文書の場合（良い例）：
「デジタル社会推進のための新制度に関する報告書」によれば、個人情報保護の強化とデータ活用の促進を両立させる制度設計において、技術的な安全管理措置と法的な規制枠組みの整備が重要な要素とされる。[DOCUMENT_PAGE_DETECTED]

### 文書の場合（政策文書の詳細版）：
「AI活用ガイドライン策定に向けた中間報告書」によれば、人工知能の社会実装における課題として、技術的安全性の確保、倫理的配慮、法的責任の明確化の3つが重要な柱とされている。技術的安全性については、アルゴリズムの透明性確保と説明可能性の向上が求められ、特に医療や金融分野での導入では厳格な検証プロセスが必要だとしている。倫理的配慮では、バイアスの排除と公平性の確保が重点項目とされ、多様性を考慮したデータセットの構築と継続的な監視体制の整備が提言されている。法的責任については、AI判断による損害発生時の責任所在を明確化する新たな法的枠組みの検討が必要だと指摘している。実装にあたっては、段階的なアプローチを採用し、リスクレベルに応じた規制の差別化を図ることで、イノベーション促進と安全性確保の両立を目指すとしている。[DOCUMENT_PAGE_DETECTED]

### ブログ・記事の場合（良い例）：
「デジタル社会におけるプライバシー保護の課題と展望」では、個人情報保護法の改正を受けたデータ活用の現状について詳細に分析している。著者は、企業のデータ収集方法の透明性向上が重要であると指摘し、特にクッキー規制やトラッキング防止技術の導入が消費者の信頼獲得に不可欠だと論じている。また、GDPRなど海外の規制動向を参考に、日本でも個人の権利強化とイノベーション促進のバランスを取る制度設計が必要だと提言している。技術的側面では、プライバシー・バイ・デザインの考え方を製品開発の初期段階から組み込むことで、後から対応するよりもコストを削減できると分析している。最終的に、政府・企業・市民が協力してデータ活用のルール作りを進めることが、デジタル社会の健全な発展に繋がるとの見解を示している。[DOCUMENT_PAGE_DETECTED]

### 議事録の場合（良い例）：
「教育分野の認証基盤の在り方に関する検討会（第3回）」では、組織間・外部連携における認証基盤の取りまとめ案について審議し、田中委員からは実装パターンの具体化と技術仕様の詳細化について質問があり、事務局からはセキュリティ対策の強化と個人情報保護の留意事項について説明があった。佐藤座長からは複数自治体での実証実験の必要性が提案され、次回会議までにスケジュールの明確化と詳細な実装計画の策定を行うことが確認された。[DETAILED_MINUTES_DETECTED]

### 議事録の場合（詳細版の良い例）：
「デジタル社会基盤整備検討会（第5回）」では、地方自治体におけるデジタル化推進の課題と解決策について包括的な検討が行われた。人材不足の問題については、田中委員から広域連携による専門人材の共有や外部委託の活用が提案され、佐藤委員からは予算確保の観点から国の支援制度の拡充が必要であるとの意見が出された。技術的課題として、山田委員からは既存システムとの連携やセキュリティ対策の標準化が重要な論点であるとの指摘があり、事務局からは段階的な移行計画の策定が必要であることが説明された。また、住民サービスの向上については、鈴木座長からオンライン手続きの利便性向上と高齢者等のデジタルデバイド対策を両立させる必要性が強調され、具体的な支援策として地域のデジタル相談窓口の設置やスマートフォン教室の開催などが議論された。最終的に、次回までに各自治体の先進事例の調査結果をまとめ、実効性のあるガイドラインの策定に向けた具体的な工程表を作成することが確認された。[DETAILED_MINUTES_DETECTED]

### 悪い例（避けるべき）：
会議では第33回保健医療福祉分野における公開鍵基盤認証局の整備と運営に関する専門家会議で...
文書では、デジタル社会推進のための新制度について記載されている...
「スマートシティ指数」では、では、ミュンヘンが3年連続1位... （「では」の重複）

**重要：**
- 会議名の前に「会議では」「検討会では」などは付けないこと
- 会議名そのものを主語として使用すること
- 文書の場合も「文書では」という曖昧な表現は避け、具体的な文書名を使用すること
- 「では」の重複を避けること：文書名に既に「では」が含まれている場合は追加しない
- タイトル、会議名、文書名は必ず「」（鍵括弧）で囲むこと
    """)
    
    # メインコンテンツを明示的にLLMに渡す
    content_message = f"以下のメインコンテンツを分析して要約を作成してください：\n\n{main_content}"
    
    prompt = ChatPromptTemplate.from_messages(
        [system_prompt, assistant_prompt, MessagesPlaceholder(variable_name="messages")]
    )
    chain = prompt | llm
    
    # メインコンテンツを含むメッセージを作成
    messages = [HumanMessage(content=content_message)]
    
    result = chain.invoke({"messages": messages}, Config().get())
    
    # 議事録検出フラグのチェックと処理
    meeting_minutes_detected = "[DETAILED_MINUTES_DETECTED]" in result.content
    document_page_detected = "[DOCUMENT_PAGE_DETECTED]" in result.content
    
    # 改行をエスケープ
    overview = result.content.replace("\n", "\\n")

    logger.info(f"概要は「{result.content.replace('\n', '\\n')}」です")
    if meeting_minutes_detected:
        logger.info(f"対象は議事録を含んでいます")
    if document_page_detected:
        logger.info(f"対象は文書ページです")

    # 会議かどうかを判定
    # 議事録が検出されている場合は確実に会議
    # 文書フラグが検出されている場合は文書
    # どちらも検出されていない場合はデフォルトで会議として扱う
    if meeting_minutes_detected:
        overview = overview.replace("[DETAILED_MINUTES_DETECTED]", "").strip()
        is_meeting = True
    elif document_page_detected:
        overview = overview.replace("[DOCUMENT_PAGE_DETECTED]", "").strip()
        is_meeting = False
    else:
        # フラグが明確でない場合はデフォルトで会議として扱う
        is_meeting = True

    # 詳細説明付きメッセージを作成
    detailed_message = AIMessage(content=f"""
## 会議概要生成結果

**処理内容**: メインコンテンツから会議の概要要約を生成
**要約タイプ**: overview（会議全体の概要）
**議事録を含む**: {'〇' if meeting_minutes_detected else '×'}
**文書ページである**: {'〇' if document_page_detected else '×'}
**内容種別**: {'会議' if is_meeting else '文書'}
**入力サイズ**: {len(main_content)}文字
**出力サイズ**: {len(overview)}文字

**生成された概要**:
{overview}
""")

    # システムプロンプトを追加
    system_message = HumanMessage(content="会議の全体概要を生成してください。")

    logger.info(f"✅ 概要を作成しました: {overview}")

    return {
        "overview": overview, 
        "messages": [system_message, detailed_message],
        "meeting_minutes_detected": meeting_minutes_detected,
        "is_meeting_page": is_meeting
    }
